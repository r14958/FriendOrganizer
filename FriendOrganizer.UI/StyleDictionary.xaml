<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sf="http://schemas.syncfusion.com/wpf">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="FontSize" Value="16"/>
            </Style>
            <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                <Setter Property="FontSize" Value="20"/>
            </Style>
            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="FontSize" Value="20"/>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <AdornedElementPlaceholder x:Name="PlaceHolder"/> <!--This is a placeholder for the TextBox-->
                                        <!--Because we are in a StackPanel, this TextBlock will appear below the TextBox-->
                                        <TextBlock Height="50" FontSize="12" Foreground="Red" Text="{Binding ElementName=PlaceHolder,
                                            Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Background" Value="LightPink" />
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(Validation.Errors)[0].ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DataGridColumnStyle" TargetType="TextBlock">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="Background" Value="LightPink" />
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(Validation.Errors)[0].ErrorContent}" /> 
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DataGridEditingColumnStyle" TargetType="TextBox">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="Background" Value="LightPink" />
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(Validation.Errors)[0].ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="sf:DateTimeEdit">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel>
                                        <AdornedElementPlaceholder x:Name="PlaceHolder"/>
                                        <!--This is a placeholder for the TextBox-->
                                        <!--Because we are in a StackPanel, this TextBlock will appear below the TextBox-->
                                        <TextBlock Height="50" FontSize="12" Foreground="Red" Text="{Binding ElementName=PlaceHolder,
                                        Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Background" Value="LightPink" />
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                            Path=(Validation.Errors)[0].ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="AddButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="ToolTip" Value="Add"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="Transparent">
                                <Viewbox>
                                    <Path x:Name="path" Width="14" Height="14" Stroke="Green" StrokeThickness="3">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <LineGeometry StartPoint="0,7" EndPoint="14,7"/>
                                                <LineGeometry StartPoint="7,0" EndPoint="7,14"/>
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="path" Property="Stroke" Value="#CCCCCC"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="path" Property="Stroke" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="path" Property="Stroke" Value="Gray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RemoveButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="ToolTip" Value="Remove"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="Transparent">
                                <Viewbox>
                                    <Path x:Name="path" Width="14" Height="14" Stroke="LightCoral" StrokeThickness="3" RenderTransformOrigin="0.5 0.5">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <LineGeometry StartPoint="0,7" EndPoint="14,7"/>
                                                <LineGeometry StartPoint="7,0" EndPoint="7,14"/>
                                            </GeometryGroup>
                                        </Path.Data>
                                        <Path.RenderTransform>
                                            <RotateTransform Angle="45"/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="path" Property="Stroke" Value="#CCCCCC"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="path" Property="Stroke" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="path" Property="Stroke" Value="Gray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>